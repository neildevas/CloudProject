#!/usr/bin/env python3

import requests
import configparser
import sys

help_string = (
    "usage: ./mycloud <command> [args]\n"
    "\n"
    "  ./mycloud create <app_name>                              # create new app\n"
    "  ./mycloud run <app_name> <command_string> <port_map>     # run command in worker in app\n"
    "  ./mycloud stop <app_name> <worker_id>                    # stop a single worker\n"
    "  ./mycloud stop_app <app_name>                            # stop entire app\n"
    "  ./mycloud info                                           # show current state\n"
    "\n"
    "   app_name:       string\n"
    "   command_string: string, bash command\n"
    "   port_map:       string, format 'int:int,int:int,...'\n"
    "   worker_id:      string, docker container id\n"
)

try:
    [_, command, *args] = sys.argv
except:
    print(help_string)
    sys.exit(1)
maybe_help = command[:6]
if maybe_help in ["help", "-h", "--help"]:
    print(help_string)
    sys.exit(1)

config = configparser.ConfigParser()
config.read("config.ini")

def call_cloud(req_data):
    url = "http://127.0.0.1:" + config["MANAGER_SERVER"]["Port"] + "/"
    r = requests.post(url, json=req_data)
    print(r.text)

if "create" == command:
    [app_name] = args

    req_to_cloud = {
        "command"  : command,
        "app_name" : app_name
    }

    call_cloud(req_to_cloud)

elif "run" == command:
    [app_name, cmd_str, port_map] = args

    req_to_cloud = {
        "command"        : command,
        "app_name"       : app_name,
        "command_string" : cmd_str,
        "port_map"       : "{"+port_map+"}"
    }

    call_cloud(req_to_cloud)

elif "info" == command:
    req_to_cloud = {
        "command" : command
    }

    call_cloud(req_to_cloud)

elif "stop" == command:
    [app_name, worker_id] = args

    req_to_cloud = {
        "command"   : command,
        "app_name"  : app_name,
        "worker_id" : worker_id
    }

    call_cloud(req_to_cloud)

elif "stop_app" == command:
    [app_name] = args
    
    req_to_cloud = {
        "command"  : command,
        "app_name" : app_name
    }

    call_cloud(req_to_cloud)
